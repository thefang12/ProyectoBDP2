package punto_de_venta_p2;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.*;

/**
 *
 * @author pablotabales,Arturoalonso
 */
public class Venta extends javax.swing.JFrame {

    /**
     * Creates new form Venta
     */
    boolean refreshventas;

    public Venta() {
        initComponents();
        if (Login.puesto == Usuarios.Empleado) {
            jTabbedPane1.remove(Usuarios_JTab);
            jTabbedPane1.remove(Sucursal_jTab);
        }
        JComponent[] components = {radioBtn_activoU, radioBtn_inactivoU};
        for (JComponent c : components) {
            btnGroup_activoU.add((AbstractButton) c);
        }
        components = new JComponent[]{radioBtn_activoP, radioBtn_inactivoP};
        for (JComponent c : components) {
            btnGroup_activoP.add((AbstractButton) c);
        }
        components = new JComponent[]{radioBtn_activoC, radioBtn_inactivoC};
        for (JComponent c : components) {
            btnGroup_activoC.add((AbstractButton) c);
        }
        components = new JComponent[]{radioBtn_puesto_U, radioBtn_puesto_U2};
        for (JComponent c : components) {
            btnGroup_PuestoU.add((AbstractButton) c);
        }
        components = new JComponent[]{radioBtn_activoS, radioBtn_inactivoS};
        for (JComponent c : components) {
            btnGroup_activoS.add((AbstractButton) c);
        }
        components = new JComponent[]{radioBtn_detallesSi, radioBtn_detallesNo};
        for (JComponent c : components) {
            btnGroup_detallesPagos.add((AbstractButton) c);
        }
        components = new JComponent[]{btn_eliminar_usuario, btn_modificar_usuario, btn_cancelar_usuario, btn_eliminar_productos, btn_modificar_productos, btn_cancelar_productos, btn_reactivar_U, btn_restaurarP, btn_eliminarS, btn_modificarS, btn_cancelarS, btn_restaurarS, btn_eliminar_categoria, btn_modificar_categoria, btn_cancelar_categoria, btn_restaurarC};
        for (JComponent c : components) {
            c.setVisible(false);
        }
        radioBtn_detallesNo.setSelected(true);
        radioBtn_activoC.setSelected(true);
        radioBtn_activoS.setSelected(true);
        radioBtn_puesto_U.setSelected(true);
        radioBtn_activoU.setSelected(true);
        radioBtn_activoP.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup_PuestoU = new javax.swing.ButtonGroup();
        btnGroup_activoU = new javax.swing.ButtonGroup();
        btnGroup_activoP = new javax.swing.ButtonGroup();
        btnGroup_activoS = new javax.swing.ButtonGroup();
        btnGroup_activoC = new javax.swing.ButtonGroup();
        btnGroup_detallesPagos = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Agregar_jTab = new javax.swing.JScrollPane();
        tab_agregar = new javax.swing.JPanel();
        label_titulo = new javax.swing.JLabel();
        label_nombre = new javax.swing.JLabel();
        label_categoria = new javax.swing.JLabel();
        label_precio = new javax.swing.JLabel();
        label_cantidadP1 = new javax.swing.JLabel();
        label_cantidadP = new javax.swing.JLabel();
        txtF_Precio = new javax.swing.JTextField();
        txtF_Nombre = new javax.swing.JTextField();
        combo_categorias = new javax.swing.JComboBox();
        jSpinner2 = new javax.swing.JSpinner();
        scrollP_productos = new javax.swing.JScrollPane();
        tabla_agregarP = new javax.swing.JTable(new punto_de_venta_p2.CustomTableModel());
        radioBtn_activoP = new javax.swing.JRadioButton();
        radioBtn_inactivoP = new javax.swing.JRadioButton();
        btn_cerrarSesion = new javax.swing.JButton();
        btn_restaurarP = new javax.swing.JButton();
        btn_Agregar = new javax.swing.JButton();
        btn_cancelar_productos = new javax.swing.JButton();
        btn_eliminar_productos = new javax.swing.JButton();
        btn_modificar_productos = new javax.swing.JButton();
        logo = new javax.swing.JButton();
        fondo_agregar = new javax.swing.JButton();
        Usuarios_JTab = new javax.swing.JScrollPane();
        tabUsuarios = new javax.swing.JPanel();
        titulo_usuarios = new javax.swing.JLabel();
        label_nombre_usuarios = new javax.swing.JLabel();
        label_contrasenia = new javax.swing.JLabel();
        label_apellido = new javax.swing.JLabel();
        label_sucursal = new javax.swing.JLabel();
        label_puesto = new javax.swing.JLabel();
        correo = new javax.swing.JLabel();
        label_estatusU = new javax.swing.JLabel();
        txtF_Correo = new javax.swing.JTextField();
        txtF_ApellidoU = new javax.swing.JTextField();
        txtF_Contrase√±aU = new javax.swing.JTextField();
        txtF_NombreU = new javax.swing.JTextField();
        combo_sucursales = new javax.swing.JComboBox();
        radioBtn_puesto_U = new javax.swing.JRadioButton();
        radioBtn_puesto_U2 = new javax.swing.JRadioButton();
        radioBtn_activoU = new javax.swing.JRadioButton();
        radioBtn_inactivoU = new javax.swing.JRadioButton();
        scrollP_Usuarios = new javax.swing.JScrollPane();
        tabla_usuarios = new javax.swing.JTable(new punto_de_venta_p2.CustomTableModel());
        logo1 = new javax.swing.JButton();
        btn_help_usuarios = new javax.swing.JButton();
        btn_eliminar_usuario = new javax.swing.JButton();
        btn_reactivar_U = new javax.swing.JButton();
        btn_agregar_usuario = new javax.swing.JButton();
        btn_cancelar_usuario = new javax.swing.JButton();
        btn_modificar_usuario = new javax.swing.JButton();
        boton_cerrarSesion_usuarios = new javax.swing.JButton();
        bckground_usuarios = new javax.swing.JButton();
        Categoria_Jtab = new javax.swing.JScrollPane();
        tab_agregar1 = new javax.swing.JPanel();
        label_titulo1 = new javax.swing.JLabel();
        label_nombre1 = new javax.swing.JLabel();
        label_categoriasC = new javax.swing.JLabel();
        radioBtn_activoC = new javax.swing.JRadioButton();
        radioBtn_inactivoC = new javax.swing.JRadioButton();
        txt_NombreC = new javax.swing.JTextField();
        scrollP_productos1 = new javax.swing.JScrollPane();
        tabla_Categoria = new javax.swing.JTable(new punto_de_venta_p2.CustomTableModel());
        btn_cerrarSesion1 = new javax.swing.JButton();
        btn_agregar_categoria = new javax.swing.JButton();
        logo3 = new javax.swing.JButton();
        btn_cancelar_categoria = new javax.swing.JButton();
        btn_eliminar_categoria = new javax.swing.JButton();
        btn_modificar_categoria = new javax.swing.JButton();
        btn_restaurarC = new javax.swing.JButton();
        fondo_agregar1 = new javax.swing.JButton();
        Sucursal_jTab = new javax.swing.JScrollPane();
        tab_S = new javax.swing.JPanel();
        label_tituloS = new javax.swing.JLabel();
        label_direccionS = new javax.swing.JLabel();
        label_CPS = new javax.swing.JLabel();
        label_coloniaS = new javax.swing.JLabel();
        label_telefonoS = new javax.swing.JLabel();
        txt_TelefonoS = new javax.swing.JTextField();
        txt_ColoniaS = new javax.swing.JTextField();
        txt_CPS = new javax.swing.JTextField();
        txt_DireccionS = new javax.swing.JTextField();
        scrollP_S = new javax.swing.JScrollPane();
        tabla_agregarS = new javax.swing.JTable(new punto_de_venta_p2.CustomTableModel());
        btn_cerrarSesionS = new javax.swing.JButton();
        btn_AgregarS = new javax.swing.JButton();
        logo4 = new javax.swing.JButton();
        btn_cancelarS = new javax.swing.JButton();
        btn_modificarS = new javax.swing.JButton();
        btn_eliminarS = new javax.swing.JButton();
        btn_restaurarS = new javax.swing.JButton();
        label_sucursalesS = new javax.swing.JLabel();
        radioBtn_activoS = new javax.swing.JRadioButton();
        radioBtn_inactivoS = new javax.swing.JRadioButton();
        fondo_agregarS = new javax.swing.JButton();
        Venta_JTab = new javax.swing.JScrollPane();
        tab_venta = new javax.swing.JPanel();
        label_ventas = new javax.swing.JLabel();
        titulo_ventas = new javax.swing.JLabel();
        label_codigoProd = new javax.swing.JLabel();
        label_categoria_ventas = new javax.swing.JLabel();
        label_cambio = new javax.swing.JLabel();
        label_busquedas = new javax.swing.JLabel();
        label_total = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        label_recibo = new javax.swing.JLabel();
        txtF_codproducto = new javax.swing.JTextField();
        txtF_total = new javax.swing.JTextField();
        txtF_recibo = new javax.swing.JTextField();
        txtF_cambio = new javax.swing.JTextField();
        combo_categorias_ventas = new javax.swing.JComboBox();
        ScrollP_busquedas = new javax.swing.JScrollPane();
        tabla_busquedas = new javax.swing.JTable(new punto_de_venta_p2.CustomTableModel());
        ScrollP_Ventas = new javax.swing.JScrollPane();
        tabla_ventas = new javax.swing.JTable();
        jSpinner1 = new javax.swing.JSpinner();
        logo2 = new javax.swing.JButton();
        btn_buscar = new javax.swing.JButton();
        cerrarSesion_venta = new javax.swing.JButton();
        btn_CancelarV = new javax.swing.JButton();
        btn_pago = new javax.swing.JButton();
        btn_agregar_venta = new javax.swing.JButton();
        background_venta = new javax.swing.JButton();
        Pagos_Jtab = new javax.swing.JScrollPane();
        tab_agregar3 = new javax.swing.JPanel();
        label_titulo3 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_historial = new javax.swing.JTable();
        btn_cerrarSesion3 = new javax.swing.JButton();
        btn_BuscarHistorial = new javax.swing.JButton();
        spinnerFechadeIncio = new javax.swing.JSpinner();
        radioBtn_detallesSi = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        spinnerFechaFinal = new javax.swing.JSpinner();
        label_sucursalesS1 = new javax.swing.JLabel();
        radioBtn_detallesNo = new javax.swing.JRadioButton();
        logo5 = new javax.swing.JButton();
        fondo_agregar3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 204, 255));

        jTabbedPane1.setBackground(new java.awt.Color(102, 204, 255));

        tab_agregar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_titulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_titulo.setForeground(new java.awt.Color(255, 255, 255));
        label_titulo.setText("Agregar Productos");
        tab_agregar.add(label_titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 120, -1, -1));

        label_nombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_nombre.setForeground(new java.awt.Color(255, 255, 255));
        label_nombre.setText("Nombre");
        tab_agregar.add(label_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        label_categoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_categoria.setForeground(new java.awt.Color(255, 255, 255));
        label_categoria.setText("Categor√≠a");
        tab_agregar.add(label_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        label_precio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_precio.setForeground(new java.awt.Color(255, 255, 255));
        label_precio.setText("Precio");
        tab_agregar.add(label_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        label_cantidadP1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_cantidadP1.setForeground(new java.awt.Color(255, 255, 255));
        label_cantidadP1.setText("Productos:");
        tab_agregar.add(label_cantidadP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 180, 70, 20));

        label_cantidadP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_cantidadP.setForeground(new java.awt.Color(255, 255, 255));
        label_cantidadP.setText("Cantidad");
        tab_agregar.add(label_cantidadP, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 60, -1));
        tab_agregar.add(txtF_Precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 160, -1));
        tab_agregar.add(txtF_Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 160, -1));

        try{
            Connection con   = Conexion.getConexion();
            ResultSet r = Conexion.consultValues(con, "select nombre from categoria",null);
            r.last();
            String[] c=new String[r.getRow()+1];
            r.beforeFirst();
            int i = 0;
            for(i = 0 ; r.next();i++)
            c[i]=r.getString(1);

            c[i]="crear nueva categoria";
            combo_categorias.setModel(new javax.swing.DefaultComboBoxModel(c));
            con.close();
        }catch(SQLException e){
            System.out.println(e.getMessage());
        }
        combo_categorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_categoriasActionPerformed(evt);
            }
        });
        tab_agregar.add(combo_categorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 160, -1));

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        tab_agregar.add(jSpinner2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, 70, -1));

        try {
            Connection con   = Conexion.getConexion();
            String SQL = "SELECT nombre_articulo as articulo ,precio,nombre as categoria, cantidad_disponible as dsp FROM articulo natural join categoria natural join inventario natural join sucursal where sucursal_id = ? and activo = ?";
            tabla_agregarP.setModel(Conexion.createTableModel(con,SQL,new Object[]{Login.idSucursal,true},"agregue un articulo"));
            con.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        tabla_agregarP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_agregarPMouseClicked(evt);
            }
        });
        scrollP_productos.setViewportView(tabla_agregarP);

        tab_agregar.add(scrollP_productos, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 210, 520, 240));

        radioBtn_activoP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioBtn_activoP.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_activoP.setText("activos");
        radioBtn_activoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_activoPActionPerformed(evt);
            }
        });
        tab_agregar.add(radioBtn_activoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 180, -1, -1));

        radioBtn_inactivoP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioBtn_inactivoP.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_inactivoP.setText("descontinuados");
        radioBtn_inactivoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_inactivoPActionPerformed(evt);
            }
        });
        tab_agregar.add(radioBtn_inactivoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 180, -1, -1));

        btn_cerrarSesion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_cerrarSesion.setText("Cerrar Sesi√≥n ");
        btn_cerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrarSesionActionPerformed(evt);
            }
        });
        tab_agregar.add(btn_cerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 40, -1, -1));

        btn_restaurarP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_restaurarP.setText("Restaurar Productos");
        btn_restaurarP.setToolTipText("");
        btn_restaurarP.setEnabled(false);
        btn_restaurarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_restaurarPActionPerformed(evt);
            }
        });
        tab_agregar.add(btn_restaurarP, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, -1, -1));

        btn_Agregar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Agregar.setText("Agregar");
        btn_Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AgregarActionPerformed(evt);
            }
        });
        tab_agregar.add(btn_Agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, -1));

        btn_cancelar_productos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_cancelar_productos.setText("cancelar");
        btn_cancelar_productos.setEnabled(false);
        btn_cancelar_productos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelar_productosActionPerformed(evt);
            }
        });
        tab_agregar.add(btn_cancelar_productos, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, -1, -1));

        btn_eliminar_productos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_eliminar_productos.setText("Eliminar");
        btn_eliminar_productos.setEnabled(false);
        btn_eliminar_productos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminar_productosActionPerformed(evt);
            }
        });
        tab_agregar.add(btn_eliminar_productos, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, -1));

        btn_modificar_productos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_modificar_productos.setText("modificar");
        btn_modificar_productos.setEnabled(false);
        btn_modificar_productos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificar_productosActionPerformed(evt);
            }
        });
        tab_agregar.add(btn_modificar_productos, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, -1));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Drawing (1).png"))); // NOI18N
        logo.setBorderPainted(false);
        logo.setContentAreaFilled(false);
        tab_agregar.add(logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        fondo_agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/glazed-doughnut-atom.jpg"))); // NOI18N
        fondo_agregar.setBorderPainted(false);
        fondo_agregar.setContentAreaFilled(false);
        tab_agregar.add(fondo_agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 540));

        Agregar_jTab.setViewportView(tab_agregar);

        jTabbedPane1.addTab("Productos", Agregar_jTab);

        tabUsuarios.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titulo_usuarios.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titulo_usuarios.setForeground(new java.awt.Color(255, 255, 255));
        titulo_usuarios.setText("Agregar Personal y Asignaci√≥n Empleados");
        tabUsuarios.add(titulo_usuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, -1, -1));

        label_nombre_usuarios.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_nombre_usuarios.setForeground(new java.awt.Color(255, 255, 255));
        label_nombre_usuarios.setText("Nombre");
        tabUsuarios.add(label_nombre_usuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        label_contrasenia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_contrasenia.setForeground(new java.awt.Color(255, 255, 255));
        label_contrasenia.setText("Contrase√±a");
        tabUsuarios.add(label_contrasenia, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, -1));

        label_apellido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_apellido.setForeground(new java.awt.Color(255, 255, 255));
        label_apellido.setText("Apellido");
        tabUsuarios.add(label_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        label_sucursal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_sucursal.setForeground(new java.awt.Color(255, 255, 255));
        label_sucursal.setText("Sucursal");
        tabUsuarios.add(label_sucursal, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, -1, -1));

        label_puesto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_puesto.setForeground(new java.awt.Color(255, 255, 255));
        label_puesto.setText("Puesto");
        tabUsuarios.add(label_puesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, -1, -1));

        correo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        correo.setForeground(new java.awt.Color(255, 255, 255));
        correo.setText("Correo");
        tabUsuarios.add(correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, -1, -1));

        label_estatusU.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_estatusU.setForeground(new java.awt.Color(255, 255, 255));
        label_estatusU.setText("Empeados:");
        tabUsuarios.add(label_estatusU, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 140, -1, 20));
        tabUsuarios.add(txtF_Correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 160, -1));
        tabUsuarios.add(txtF_ApellidoU, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 160, -1));
        tabUsuarios.add(txtF_Contrase√±aU, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 160, -1));
        tabUsuarios.add(txtF_NombreU, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 160, -1));

        try{
            Connection con   = Conexion.getConexion();
            ResultSet r = Conexion.consultValues(con, "select direccion from direccion",null);
            r.last();
            String[] c=new String[r.getRow()+1];
            r.beforeFirst();
            int i = 0;
            for(i = 0 ; r.next();i++)
            c[i]=r.getString(1);
            c[i]="agregar nueva sucursal";
            combo_sucursales.setModel(new javax.swing.DefaultComboBoxModel(c));
            con.close();
        }catch(SQLException e){
            System.out.println(e.getMessage());
        }
        combo_sucursales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_sucursalesActionPerformed(evt);
            }
        });
        tabUsuarios.add(combo_sucursales, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 350, 160, -1));

        radioBtn_puesto_U.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_puesto_U.setText("Gerente");
        tabUsuarios.add(radioBtn_puesto_U, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 390, -1, -1));

        radioBtn_puesto_U2.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_puesto_U2.setText("Empleado");
        tabUsuarios.add(radioBtn_puesto_U2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, -1, -1));

        radioBtn_activoU.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioBtn_activoU.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_activoU.setText("Activos");
        radioBtn_activoU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_activoUActionPerformed(evt);
            }
        });
        tabUsuarios.add(radioBtn_activoU, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 140, -1, -1));

        radioBtn_inactivoU.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioBtn_inactivoU.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_inactivoU.setText("Inactivos");
        radioBtn_inactivoU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_inactivoUActionPerformed(evt);
            }
        });
        tabUsuarios.add(radioBtn_inactivoU, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 140, -1, -1));

        try {
            Connection con   = Conexion.getConexion();
            String SQL = "SELECT nombre,apellido,puesto,contrasenia,correo,direccion as sucursal from staff  natural join sucursal natural join direccion where activo = ?";
            tabla_usuarios.setModel(Conexion.createTableModel(con, SQL,new Object[]{true},"agregue un usuario"));
            con.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        tabla_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_usuariosMouseClicked(evt);
            }
        });
        scrollP_Usuarios.setViewportView(tabla_usuarios);

        tabUsuarios.add(scrollP_Usuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 180, 590, 270));

        logo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Drawing (1).png"))); // NOI18N
        logo1.setBorderPainted(false);
        logo1.setContentAreaFilled(false);
        tabUsuarios.add(logo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        btn_help_usuarios.setText("?");
        btn_help_usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_help_usuariosActionPerformed(evt);
            }
        });
        tabUsuarios.add(btn_help_usuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 460, -1, -1));

        btn_eliminar_usuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_eliminar_usuario.setText("Eliminar");
        btn_eliminar_usuario.setEnabled(false);
        btn_eliminar_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminar_usuarioActionPerformed(evt);
            }
        });
        tabUsuarios.add(btn_eliminar_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 440, -1, -1));

        btn_reactivar_U.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_reactivar_U.setText("Reactivar Empleado");
        btn_reactivar_U.setEnabled(false);
        btn_reactivar_U.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reactivar_UActionPerformed(evt);
            }
        });
        tabUsuarios.add(btn_reactivar_U, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, -1, -1));

        btn_agregar_usuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_agregar_usuario.setText("Agregar");
        btn_agregar_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_usuarioActionPerformed(evt);
            }
        });
        tabUsuarios.add(btn_agregar_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 440, -1, -1));

        btn_cancelar_usuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_cancelar_usuario.setText("cancelar");
        btn_cancelar_usuario.setEnabled(false);
        btn_cancelar_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelar_usuarioActionPerformed(evt);
            }
        });
        tabUsuarios.add(btn_cancelar_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, -1, -1));

        btn_modificar_usuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_modificar_usuario.setText("modificar");
        btn_modificar_usuario.setEnabled(false);
        btn_modificar_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificar_usuarioActionPerformed(evt);
            }
        });
        tabUsuarios.add(btn_modificar_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 440, -1, -1));

        boton_cerrarSesion_usuarios.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        boton_cerrarSesion_usuarios.setText("Cerrar Sesi√≥n");
        boton_cerrarSesion_usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cerrarSesion_usuariosActionPerformed(evt);
            }
        });
        tabUsuarios.add(boton_cerrarSesion_usuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 50, -1, -1));

        bckground_usuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/donuts_galaxy_wallpaper_by_annedelune-d6uhkc1.png"))); // NOI18N
        bckground_usuarios.setBorderPainted(false);
        bckground_usuarios.setContentAreaFilled(false);
        tabUsuarios.add(bckground_usuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 540));

        Usuarios_JTab.setViewportView(tabUsuarios);

        jTabbedPane1.addTab("Empleados", Usuarios_JTab);

        tab_agregar1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_titulo1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_titulo1.setForeground(new java.awt.Color(255, 255, 255));
        label_titulo1.setText("Categorias");
        tab_agregar1.add(label_titulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, -1, -1));

        label_nombre1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_nombre1.setForeground(new java.awt.Color(255, 255, 255));
        label_nombre1.setText("Nombre");
        tab_agregar1.add(label_nombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        label_categoriasC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_categoriasC.setForeground(new java.awt.Color(255, 255, 255));
        label_categoriasC.setText("Categorias:");
        tab_agregar1.add(label_categoriasC, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 150, 70, 20));

        radioBtn_activoC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioBtn_activoC.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_activoC.setText("activas");
        radioBtn_activoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_activoCActionPerformed(evt);
            }
        });
        tab_agregar1.add(radioBtn_activoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 150, -1, -1));

        radioBtn_inactivoC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioBtn_inactivoC.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_inactivoC.setText("inactivas");
        radioBtn_inactivoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_inactivoCActionPerformed(evt);
            }
        });
        tab_agregar1.add(radioBtn_inactivoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 150, -1, -1));
        tab_agregar1.add(txt_NombreC, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 160, -1));

        try{
            Connection con =  Conexion.getConexion();
            String SQL ="SELECT nombre from categoria where activa = ?";
            tabla_Categoria.setModel(Conexion.createTableModel(con,SQL,new Object[]{true},"agregue una categoria"));
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
        }
        tabla_Categoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_CategoriaMouseClicked(evt);
            }
        });
        scrollP_productos1.setViewportView(tabla_Categoria);

        tab_agregar1.add(scrollP_productos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 220, 520, 230));

        btn_cerrarSesion1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_cerrarSesion1.setText("Cerrar Sesi√≥n ");
        btn_cerrarSesion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrarSesion1ActionPerformed(evt);
            }
        });
        tab_agregar1.add(btn_cerrarSesion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 40, -1, -1));

        btn_agregar_categoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_agregar_categoria.setText("Agregar");
        btn_agregar_categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_categoriaActionPerformed(evt);
            }
        });
        tab_agregar1.add(btn_agregar_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, -1, -1));

        logo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Drawing (1).png"))); // NOI18N
        logo3.setBorderPainted(false);
        logo3.setContentAreaFilled(false);
        tab_agregar1.add(logo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        btn_cancelar_categoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_cancelar_categoria.setText("Cancelar");
        btn_cancelar_categoria.setEnabled(false);
        btn_cancelar_categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelar_categoriaActionPerformed(evt);
            }
        });
        tab_agregar1.add(btn_cancelar_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        btn_eliminar_categoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_eliminar_categoria.setText("Eliminar");
        btn_eliminar_categoria.setEnabled(false);
        btn_eliminar_categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminar_categoriaActionPerformed(evt);
            }
        });
        tab_agregar1.add(btn_eliminar_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, -1, -1));

        btn_modificar_categoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_modificar_categoria.setText("Modificar");
        btn_modificar_categoria.setEnabled(false);
        btn_modificar_categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificar_categoriaActionPerformed(evt);
            }
        });
        tab_agregar1.add(btn_modificar_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, -1, -1));

        btn_restaurarC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_restaurarC.setText("Restaurar Categoria");
        btn_restaurarC.setToolTipText("");
        btn_restaurarC.setEnabled(false);
        btn_restaurarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_restaurarCActionPerformed(evt);
            }
        });
        tab_agregar1.add(btn_restaurarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, -1, -1));

        fondo_agregar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/glazed-doughnut-atom.jpg"))); // NOI18N
        fondo_agregar1.setBorderPainted(false);
        fondo_agregar1.setContentAreaFilled(false);
        tab_agregar1.add(fondo_agregar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 540));

        Categoria_Jtab.setViewportView(tab_agregar1);

        jTabbedPane1.addTab("Categoria", Categoria_Jtab);

        tab_S.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_tituloS.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_tituloS.setForeground(new java.awt.Color(255, 255, 255));
        label_tituloS.setText("Sucursales");
        tab_S.add(label_tituloS, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, -1));

        label_direccionS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_direccionS.setForeground(new java.awt.Color(255, 255, 255));
        label_direccionS.setText("Direccion");
        tab_S.add(label_direccionS, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        label_CPS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_CPS.setForeground(new java.awt.Color(255, 255, 255));
        label_CPS.setText("C√≥digo Postal");
        tab_S.add(label_CPS, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        label_coloniaS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_coloniaS.setForeground(new java.awt.Color(255, 255, 255));
        label_coloniaS.setText("Colonia");
        tab_S.add(label_coloniaS, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        label_telefonoS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_telefonoS.setForeground(new java.awt.Color(255, 255, 255));
        label_telefonoS.setText("Telefono");
        tab_S.add(label_telefonoS, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 60, -1));
        tab_S.add(txt_TelefonoS, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, 160, -1));
        tab_S.add(txt_ColoniaS, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 160, -1));
        tab_S.add(txt_CPS, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 160, -1));
        tab_S.add(txt_DireccionS, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 160, -1));

        try{
            Connection con =  Conexion.getConexion();
            String SQL ="select direccion,colonia,cp,telefono from direccion natural join sucursal where activa = ?  ";
            tabla_agregarS.setModel(Conexion.createTableModel(con,SQL,new Object[]{true},"agregue una sucursal"));
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
        }
        tabla_agregarS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_agregarSMouseClicked(evt);
            }
        });
        scrollP_S.setViewportView(tabla_agregarS);

        tab_S.add(scrollP_S, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, 520, 260));

        btn_cerrarSesionS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_cerrarSesionS.setText("Cerrar Sesi√≥n ");
        btn_cerrarSesionS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrarSesionSActionPerformed(evt);
            }
        });
        tab_S.add(btn_cerrarSesionS, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 40, -1, -1));

        btn_AgregarS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_AgregarS.setText("Agregar");
        btn_AgregarS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AgregarSActionPerformed(evt);
            }
        });
        tab_S.add(btn_AgregarS, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 380, -1, -1));

        logo4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Drawing (1).png"))); // NOI18N
        logo4.setBorderPainted(false);
        logo4.setContentAreaFilled(false);
        tab_S.add(logo4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        btn_cancelarS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_cancelarS.setText("cancelar");
        btn_cancelarS.setEnabled(false);
        btn_cancelarS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarSActionPerformed(evt);
            }
        });
        tab_S.add(btn_cancelarS, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, -1, -1));

        btn_modificarS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_modificarS.setText("modificar");
        btn_modificarS.setEnabled(false);
        btn_modificarS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarSActionPerformed(evt);
            }
        });
        tab_S.add(btn_modificarS, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, -1));

        btn_eliminarS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_eliminarS.setText("Eliminar");
        btn_eliminarS.setEnabled(false);
        btn_eliminarS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarSActionPerformed(evt);
            }
        });
        tab_S.add(btn_eliminarS, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, -1));

        btn_restaurarS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_restaurarS.setText("Restaurar Sucursales");
        btn_restaurarS.setToolTipText("");
        btn_restaurarS.setEnabled(false);
        btn_restaurarS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_restaurarSActionPerformed(evt);
            }
        });
        tab_S.add(btn_restaurarS, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, -1, -1));

        label_sucursalesS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_sucursalesS.setForeground(new java.awt.Color(255, 255, 255));
        label_sucursalesS.setText("Sucursales:");
        tab_S.add(label_sucursalesS, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 150, 70, 20));

        radioBtn_activoS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioBtn_activoS.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_activoS.setText("activas");
        radioBtn_activoS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_activoSActionPerformed(evt);
            }
        });
        tab_S.add(radioBtn_activoS, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 150, -1, -1));

        radioBtn_inactivoS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioBtn_inactivoS.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_inactivoS.setText("inactivas");
        radioBtn_inactivoS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_inactivoSActionPerformed(evt);
            }
        });
        tab_S.add(radioBtn_inactivoS, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 150, -1, -1));

        fondo_agregarS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/glazed-doughnut-atom.jpg"))); // NOI18N
        fondo_agregarS.setBorderPainted(false);
        fondo_agregarS.setContentAreaFilled(false);
        tab_S.add(fondo_agregarS, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 540));

        Sucursal_jTab.setViewportView(tab_S);

        jTabbedPane1.addTab("Sucursales", Sucursal_jTab);

        tab_venta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_ventas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_ventas.setForeground(new java.awt.Color(204, 204, 204));
        label_ventas.setText("Ventas");
        tab_venta.add(label_ventas, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 70, -1));

        titulo_ventas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titulo_ventas.setForeground(new java.awt.Color(204, 204, 204));
        titulo_ventas.setText("Punto de Venta");
        tab_venta.add(titulo_ventas, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, -1, -1));

        label_codigoProd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_codigoProd.setForeground(new java.awt.Color(204, 204, 204));
        label_codigoProd.setText("Nombre");
        tab_venta.add(label_codigoProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 80, 130, -1));

        label_categoria_ventas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_categoria_ventas.setForeground(new java.awt.Color(204, 204, 204));
        label_categoria_ventas.setText("Categor√≠a");
        tab_venta.add(label_categoria_ventas, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 139, -1));

        label_cambio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_cambio.setForeground(new java.awt.Color(255, 255, 255));
        label_cambio.setText("Cambio");
        tab_venta.add(label_cambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 470, -1, -1));

        label_busquedas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_busquedas.setForeground(new java.awt.Color(204, 204, 204));
        label_busquedas.setText("Busquedas");
        tab_venta.add(label_busquedas, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 180, 70, -1));

        label_total.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_total.setForeground(new java.awt.Color(255, 255, 255));
        label_total.setText("Total");
        tab_venta.add(label_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 56, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Cantidad");
        tab_venta.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, -1, -1));

        label_recibo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_recibo.setForeground(new java.awt.Color(255, 255, 255));
        label_recibo.setText("Recibi√≥");
        tab_venta.add(label_recibo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 420, -1, -1));
        tab_venta.add(txtF_codproducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 238, -1));

        txtF_total.setEditable(false);
        txtF_total.setText("0");
        tab_venta.add(txtF_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 420, 76, -1));

        txtF_recibo.setText("0");
        tab_venta.add(txtF_recibo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 420, 80, -1));

        txtF_cambio.setEditable(false);
        txtF_cambio.setText("0");
        tab_venta.add(txtF_cambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 470, 80, -1));

        try{
            Connection con   = Conexion.getConexion();
            ResultSet r = Conexion.consultValues(con, "select nombre from categoria",null);
            r.last();
            String[] c=new String[r.getRow()];
            r.beforeFirst();
            int i = 0;
            for(i = 0 ; r.next();i++)
            c[i]=r.getString(1);
            combo_categorias_ventas.setModel(new javax.swing.DefaultComboBoxModel(c));
            con.close();
        }catch(SQLException e){
            System.out.println(e.getMessage());
        }
        tab_venta.add(combo_categorias_ventas, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, 240, -1));

        tabla_busquedas.setModel(new punto_de_venta_p2.CustomTableModel("busque por categoria o por nombre"));
        tabla_busquedas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tabla_busquedasFocusLost(evt);
            }
        });
        tabla_busquedas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_busquedasMouseClicked(evt);
            }
        });
        ScrollP_busquedas.setViewportView(tabla_busquedas);

        tab_venta.add(ScrollP_busquedas, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 200, 430, 180));

        tabla_ventas.setModel(new punto_de_venta_p2.CustomTableModel("agregar producto"));
        tabla_ventas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tabla_ventasFocusLost(evt);
            }
        });
        tabla_ventas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_ventasMouseClicked(evt);
            }
        });
        ScrollP_Ventas.setViewportView(tabla_ventas);

        tab_venta.add(ScrollP_Ventas, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 440, 180));

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        tab_venta.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 70, -1));

        logo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Drawing (1).png"))); // NOI18N
        logo2.setBorderPainted(false);
        logo2.setContentAreaFilled(false);
        tab_venta.add(logo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        btn_buscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });
        tab_venta.add(btn_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 130, 140, 30));

        cerrarSesion_venta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cerrarSesion_venta.setText("Cerrar Sesi√≥n ");
        cerrarSesion_venta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesion_ventaActionPerformed(evt);
            }
        });
        tab_venta.add(cerrarSesion_venta, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, -1, 30));

        btn_CancelarV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_CancelarV.setText("Cancelar");
        btn_CancelarV.setEnabled(false);
        btn_CancelarV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CancelarVActionPerformed(evt);
            }
        });
        tab_venta.add(btn_CancelarV, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 470, 100, -1));

        btn_pago.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_pago.setText("Pago");
        btn_pago.setEnabled(false);
        btn_pago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pagoActionPerformed(evt);
            }
        });
        tab_venta.add(btn_pago, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 420, 100, -1));

        btn_agregar_venta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_agregar_venta.setText("Agregar a cuenta");
        btn_agregar_venta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_ventaActionPerformed(evt);
            }
        });
        tab_venta.add(btn_agregar_venta, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 70, 140, 30));

        background_venta.setBackground(new java.awt.Color(251, 251, 251));
        background_venta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/nebula.png"))); // NOI18N
        background_venta.setText("jButton7");
        tab_venta.add(background_venta, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 530));

        Venta_JTab.setViewportView(tab_venta);

        jTabbedPane1.addTab("Ventas", Venta_JTab);

        tab_agregar3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_titulo3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_titulo3.setForeground(new java.awt.Color(255, 255, 255));
        label_titulo3.setText("Historial de Ventas");
        tab_agregar3.add(label_titulo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Fecha de incio:");
        tab_agregar3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 140, -1, -1));

        try {
            Connection con   = Conexion.getConexion();
            String sql ="SELECT  fecha_compra,fecha_pago,p.cantidad,concat(s.nombre,' ',s.apellido) as staff  FROM  pago p natural join compra c natural join staff s group by c.compra_id ";
            tabla_historial.setModel(Conexion.createTableModel(con,sql,null,"No se ha vendido nada"));
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        jScrollPane1.setViewportView(tabla_historial);

        tab_agregar3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 900, 300));

        btn_cerrarSesion3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_cerrarSesion3.setText("Cerrar Sesi√≥n ");
        btn_cerrarSesion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrarSesion3ActionPerformed(evt);
            }
        });
        tab_agregar3.add(btn_cerrarSesion3, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 40, -1, -1));

        btn_BuscarHistorial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_BuscarHistorial.setText("Buscar");
        btn_BuscarHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BuscarHistorialActionPerformed(evt);
            }
        });
        tab_agregar3.add(btn_BuscarHistorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 140, -1, -1));

        spinnerFechadeIncio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerFechadeIncio.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, new java.util.Date(), java.util.Calendar.DAY_OF_MONTH));
        spinnerFechadeIncio.setEditor(new JSpinner.DateEditor(spinnerFechadeIncio,"dd/MM/yyyy"));
        tab_agregar3.add(spinnerFechadeIncio, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 120, -1));

        radioBtn_detallesSi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioBtn_detallesSi.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_detallesSi.setText("si");
        radioBtn_detallesSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_detallesSiActionPerformed(evt);
            }
        });
        tab_agregar3.add(radioBtn_detallesSi, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Fecha de termino:");
        tab_agregar3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 140, -1, -1));

        spinnerFechaFinal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerFechaFinal.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, new java.util.Date(), java.util.Calendar.DAY_OF_MONTH));
        spinnerFechaFinal.setEditor(new JSpinner.DateEditor(spinnerFechaFinal,"dd/MM/yyyy"));
        tab_agregar3.add(spinnerFechaFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 140, 120, -1));

        label_sucursalesS1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_sucursalesS1.setForeground(new java.awt.Color(255, 255, 255));
        label_sucursalesS1.setText("Mostrar Detalles:");
        tab_agregar3.add(label_sucursalesS1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 110, 20));

        radioBtn_detallesNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioBtn_detallesNo.setForeground(new java.awt.Color(255, 255, 255));
        radioBtn_detallesNo.setText("no");
        radioBtn_detallesNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_detallesNoActionPerformed(evt);
            }
        });
        tab_agregar3.add(radioBtn_detallesNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, -1, -1));

        logo5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Drawing (1).png"))); // NOI18N
        logo5.setBorderPainted(false);
        logo5.setContentAreaFilled(false);
        tab_agregar3.add(logo5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        fondo_agregar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/donuts_galaxy_wallpaper_by_annedelune-d6uhkc1.png"))); // NOI18N
        fondo_agregar3.setBorderPainted(false);
        fondo_agregar3.setContentAreaFilled(false);
        tab_agregar3.add(fondo_agregar3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 540));

        Pagos_Jtab.setViewportView(tab_agregar3);

        jTabbedPane1.addTab("Historial de Ventas", Pagos_Jtab);

        jPanel1.setMaximumSize(new java.awt.Dimension(987, 592));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/518079-background-hd.jpg"))); // NOI18N
        jLabel1.setToolTipText("");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 987, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void cambiarVentana(JFrame frame) {
        frame.setVisible(true);
        this.dispose();
    }

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed

        try {
            Connection con = Conexion.getConexion();
            String query = "";
            Object[] o = null;
            if (txtF_codproducto.equals("")) {
                query = "Select nombre_articulo as articulo,nombre as categoria,precio,cantidad_disponible as dsp,direccion as sucursal from articulo a natural join categoria c natural join inventario  i natural join sucursal s natural join direccion d where c.nombre = ? ";
                o = new Object[]{combo_categorias_ventas.getSelectedItem().toString()};
            } else {
                query = "Select nombre_articulo as articulo,nombre as categoria,precio,cantidad_disponible as dsp,direccion as sucursal "
                        + "from articulo a natural join categoria c natural join inventario  i natural join sucursal s natural join direccion d "
                        + "where c.nombre = ? AND a.nombre_articulo like ? ";
                o = new Object[]{combo_categorias_ventas.getSelectedItem().toString(), "%" + txtF_codproducto.getText() + "%"};
            }
            //TODO es necesario un codigo de producto o solo el nombre?
            tabla_busquedas.setModel(Conexion.createTableModel(con, query, o, "sin resultados"));
            ScrollP_busquedas.getViewport().add(tabla_busquedas);

            con.close();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AgregarActionPerformed
        if (txtF_Nombre.getText().equals("") || txtF_Precio.equals("")) {
            JOptionPane.showMessageDialog(null, "llene campos requeridos", "error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                String select;
                Connection con = Conexion.getConexion();
                select = "Select categoria_id from categoria where nombre = ? ";
                ResultSet r = Conexion.consultValues(con, select, new Object[]{combo_categorias.getSelectedItem().toString()});
                r.last();
                String insert = "INSERT INTO articulo VALUES(?,?,?,?,?)";
                Object[] o = {Conexion.getAutonumericField(con, insert, 1), txtF_Nombre.getText(), txtF_Precio.getText(), r.getInt(1), true};
                Conexion.executeUpdate(con, insert, o);
                //se actualiza tabla inventario
                //TODO hacer trigger para evitar duplicados
                r.last();
                select = "Select  articulo_id from articulo where  nombre_articulo = ? AND categoria_id = ?";
                insert = "INSERT INTO inventario VALUES(?,?,?,?)";
                r = Conexion.consultValues(con, select, new Object[]{txtF_Nombre.getText(), r.getInt(1)});
                r.last();
                Object[] f = {Conexion.getAutonumericField(con, insert, 1), r.getInt(1), Login.idSucursal, jSpinner2.getValue()};
                Conexion.executeUpdate(con, insert, f);
                Conexion.refreshTable(tabla_agregarP, con);
                con.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_btn_AgregarActionPerformed


    private void btn_agregar_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_usuarioActionPerformed
        // TODO add your handling code here:
        if (txtF_ApellidoU.getText().equals("") || txtF_NombreU.getText().equals("") || txtF_Contrase√±aU.getText().equals("") || txtF_Correo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "llene campos requeridos", "error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                // String insertFoto="update table set foto="
                Connection con = Conexion.getConexion();
                ResultSet r = Conexion.consultValues(con, "Select sucursal_id from sucursal natural join direccion where direccion = ?", new Object[]{combo_sucursales.getSelectedItem()});
                r.last();
                String puesto = null;
                if (radioBtn_puesto_U.isSelected()) {
                    puesto = radioBtn_puesto_U.getText();
                } else {
                    puesto = radioBtn_puesto_U2.getText();
                }
                Object[] o = {Conexion.getAutonumericField(con, "INSERT INTO staff VALUES(?,?,?,?,?,?,?,?)", 1), txtF_Contrase√±aU.getText(), txtF_NombreU.getText(), txtF_ApellidoU.getText(), true, r.getInt(1), puesto, txtF_Correo.getText()};
                Conexion.executeUpdate(con, "INSERT INTO staff VALUES(?,?,?,?,?,?,?,?)", o);
                String sql = "SELECT nombre,apellido,activo,puesto,contrasenia,correo,direccion as sucursal from staff  natural join sucursal natural join direccion";
                Conexion.refreshTable(tabla_usuarios, con);
                con.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_btn_agregar_usuarioActionPerformed

    private void calcularTotal(CustomTableModel model) {
        float total = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            total += (int) model.getValueAt(i, 2) * (float) model.getValueAt(i, 3);
        }
        txtF_total.setText("" + total);
    }


    private void btn_agregar_ventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_ventaActionPerformed

        if (refreshventas) {
            ((CustomTableModel) tabla_ventas.getModel()).clearTable();
            txtF_total.setText("0");
            txtF_recibo.setText("0");
            txtF_cambio.setText("0");
        }
        ResultSet r;
        btn_CancelarV.setEnabled(true);
        btn_pago.setEnabled(true);
        try {
            r = Conexion.consultValues(Conexion.getConexion(),
                    "Select nombre_articulo,nombre,cantidad_disponible,precio,sucursal_id from articulo natural join categoria natural join inventario  natural join sucursal "
                    + "where sucursal_id = ? AND nombre = ? AND nombre_articulo = ?", new Object[]{Login.idSucursal, combo_categorias_ventas.getSelectedItem().toString(), txtF_codproducto.getText()});

            if (r.last()) {
                CustomTableModel model = ((CustomTableModel) tabla_ventas.getModel());
                int cant = (int) jSpinner1.getValue();
                Object[] o = {r.getObject(1), r.getObject(2), cant, r.getObject(4)};
                boolean flag = false;
                for (int i = 0; i < model.getRowCount(); i++) {
                    if (o[0].equals(model.getValueAt(i, 0)) && o[1].equals(model.getValueAt(i, 1)) && o[3].equals(model.getValueAt(i, 3))) {
                        if ((r.getInt(3) - (cant + (int) model.getValueAt(i, 2))) >= 0) {
                            model.setValueAt(cant + (int) model.getValueAt(i, 2), i, 2);
                            flag = true;
                            calcularTotal(model);

                            break;
                        } else {
                            JOptionPane.showMessageDialog(this, "cantidad insuficiente de articulos");
                            flag = true;
                            break;
                        }
                    }
                }
                if (!flag) {
                    if ((r.getInt(3) - cant) >= 0) {
                        if (model.tableIsEmpty()) {
                            model.setColumnIdentifiers(new String[]{"articulo", "categoria", "cantidad", "precio"});
                        }
                        ((CustomTableModel) tabla_ventas.getModel()).addRow(o);
                        calcularTotal(model);
                    } else {
                        JOptionPane.showMessageDialog(this, "cantidad insuficiente de articulos");

                    }
                }

            } else {
                JOptionPane.showMessageDialog(this, "articulo no esta en esta  sucursal");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_agregar_ventaActionPerformed

    private void btn_pagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pagoActionPerformed
        // TODO add your handling code here:
        //el pago se hace igualando todos los datos de tabla ventas a su id con la sucursal de Login.idsucursal mas la cantidad deseada
        //restar la cantidad disponible

        float total = Float.parseFloat(txtF_total.getText());
        float recibio = Float.parseFloat(txtF_recibo.getText());
        float cambio = 0;
        cambio = recibio - total;
        CustomTableModel model = (CustomTableModel) tabla_ventas.getModel();
        if (cambio < 0) {

            JOptionPane.showMessageDialog(null, "Dinero insuficiente");
        } else {
            try {
                Connection con = Conexion.getConexion();
                //necesito hacer un insert de una compra con detalles y su pago 
                String cmd;
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                Calendar cal = Calendar.getInstance();
                String datetime = dateFormat.format(cal.getTime());
                //insert compra

                cmd = "insert into compra values(?,?,?)";
                Conexion.executeUpdate(con, cmd, new Object[]{Conexion.getAutonumericField(con, cmd, 1), datetime, Login.idCuenta});
                //sacar id compra
                ResultSet r = Conexion.consultValues(con, "select compra_id from compra where fecha_compra = ? AND staff_id = ?", new Object[]{datetime, Login.idCuenta});
                if (r.last()) {
                    int compra_id = r.getInt(1);
                    //insert pago
                    cmd = "insert into pago values(?,?,?,?)";
                    Conexion.executeUpdate(con, cmd, new Object[]{Conexion.getAutonumericField(con, cmd, 1), total, datetime, compra_id});
                    //obtener ids inventarios e insert detalles
                    for (int i = 0; i < model.getRowCount(); i++) {
                        cmd = "insert into detalle_compra values(?,?,?,?)";
                        ResultSet t = Conexion.consultValues(con, "select inventario_id,cantidad_disponible from inventario natural join articulo where nombre_articulo = ? AND sucursal_id = ?", new Object[]{model.getValueAt(i, 0), Login.idSucursal});
                        if (t.last()) {
                            Conexion.executeUpdate(con, cmd, new Object[]{Conexion.getAutonumericField(con, cmd, 1), model.getValueAt(i, 2), compra_id, t.getInt(1)});
                            cmd = "update inventario natural join articulo set cantidad_disponible = ? where inventario_id = " + t.getInt(1);
                            Conexion.executeUpdate(con, cmd, new Object[]{(t.getInt(2) - (int) model.getValueAt(i, 2))});
                        }
                    }

                    Conexion.refreshTable(tabla_busquedas, con);
                }
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
            }
            btn_CancelarV.setEnabled(false);
            btn_pago.setEnabled(false);
            refreshventas = true;
            txtF_cambio.setText(Float.toString(cambio));
        }
    }//GEN-LAST:event_btn_pagoActionPerformed

    private void btn_cerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrarSesionActionPerformed
        // TODO add your handling code here:
        cambiarVentana(new Login());
    }//GEN-LAST:event_btn_cerrarSesionActionPerformed

    private void cerrarSesion_ventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesion_ventaActionPerformed
        // TODO add your handling code here:
        cambiarVentana(new Login());
    }//GEN-LAST:event_cerrarSesion_ventaActionPerformed

    private void boton_cerrarSesion_usuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cerrarSesion_usuariosActionPerformed
        // TODO add your handling code here:
        cambiarVentana(new Login());
    }//GEN-LAST:event_boton_cerrarSesion_usuariosActionPerformed

    private void combo_categoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_categoriasActionPerformed
        if (combo_categorias.getSelectedItem().toString().equals("crear nueva categoria")) {
          
        }
    }//GEN-LAST:event_combo_categoriasActionPerformed

    private void combo_sucursalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_sucursalesActionPerformed
        // TODO add your handling code here:
        if (combo_sucursales.getSelectedItem().toString().equals("agregar nueva sucursal")) {
            
        }
    }//GEN-LAST:event_combo_sucursalesActionPerformed

    private void tabla_busquedasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_busquedasMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() >= 2) {
            CustomTableModel m = (CustomTableModel) tabla_busquedas.getModel();
            Object[] o = m.getRow(tabla_busquedas.getSelectedRow());
            ResultSet r;
            if (o != null) {
                try {
                    Connection con = Conexion.getConexion();
                    r = Conexion.consultValues(con, "Select sucursal_id from sucursal natural join direccion where direccion = ?", new Object[]{o[4]});

                    r.last();
                    if (r.getInt(1) == Login.idSucursal) {
                        txtF_codproducto.setText(o[0].toString());
                    } else {
                        JOptionPane.showMessageDialog(this, "articulo no esta en esta  sucursal");
                    }
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_tabla_busquedasMouseClicked

    private void tabla_busquedasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabla_busquedasFocusLost
        tabla_busquedas.clearSelection();
    }//GEN-LAST:event_tabla_busquedasFocusLost

    private void tabla_ventasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabla_ventasFocusLost

        tabla_ventas.clearSelection();
    }//GEN-LAST:event_tabla_ventasFocusLost

    private void tabla_ventasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_ventasMouseClicked
        // TODO add your handling code here:
        int row = tabla_ventas.getSelectedRow();
        if (evt.getClickCount() > 1 && tabla_ventas.getSelectedRows().length > 0) {

            CustomTableModel model = ((CustomTableModel) tabla_ventas.getModel());
            int cantidad = (int) model.getValueAt(tabla_ventas.getSelectedRow(), 2);
            String n = JOptionPane.showInputDialog(this, "Cuantos productos quieres eliminar?", "Eliminar productos", JOptionPane.ERROR_MESSAGE);
            if (n.matches("[1-" + cantidad + "]")) {
                int eliminar = Integer.parseInt(n);
                if (eliminar < cantidad) {
                    model.setValueAt(cantidad - eliminar, row, 2);
                } else {
                    model.removeRow(row);
                    if (model.tableIsEmpty()) {
                        ((CustomTableModel) tabla_ventas.getModel()).clearTable();
                        txtF_total.setText("0");
                        txtF_recibo.setText("0");
                        txtF_cambio.setText("0");
                        btn_CancelarV.setEnabled(false);
                        btn_pago.setEnabled(false);
                    }
                }
                calcularTotal(model);
            } else {
                JOptionPane.showMessageDialog(this, "introduzca un numero valido", null, JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_tabla_ventasMouseClicked

    private void btn_modificar_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificar_usuarioActionPerformed
        try {
            Connection con = Conexion.getConexion();
            // TODO add your handling code here:

            String puesto = null;
            if (radioBtn_puesto_U.isSelected()) {
                puesto = radioBtn_puesto_U.getText();
            } else {
                puesto = radioBtn_puesto_U2.getText();
            }
            ResultSet r = Conexion.consultValues(con, "Select sucursal_id from sucursal natural join direccion where direccion = ?", new Object[]{combo_sucursales.getSelectedItem()});
            if (r.last()) {
                Conexion.executeUpdate(con, "Update staff set contrasenia = ?,nombre =?,apellido=?,activo=?,sucursal_id=?,puesto=?,correo=? where correo = ?",
                        new Object[]{txtF_Contrase√±aU.getText(), txtF_NombreU.getText(), txtF_ApellidoU.getText(), true, r.getInt(1), puesto, txtF_Correo.getText(), ((CustomTableModel) tabla_usuarios.getModel()).getValueAt(tabla_usuarios.getSelectedRow(), 4)});
            }

            Conexion.refreshTable(tabla_usuarios, con);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn_agregar_usuario.setVisible(true);
        btn_agregar_usuario.setEnabled(true);
        btn_cancelar_usuario.setVisible(false);
        btn_eliminar_usuario.setVisible(false);
        btn_modificar_usuario.setVisible(false);
        btn_cancelar_usuario.setEnabled(false);
        btn_eliminar_usuario.setEnabled(false);
        btn_modificar_usuario.setEnabled(false);
        txtF_NombreU.setText(null);
        txtF_ApellidoU.setText(null);
        txtF_Correo.setText(null);
        txtF_Contrase√±aU.setText(null);
        combo_sucursales.setSelectedIndex(0);
        radioBtn_puesto_U.setSelected(true);
        tabla_usuarios.clearSelection();
    }//GEN-LAST:event_btn_modificar_usuarioActionPerformed

    private void btn_cancelar_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelar_usuarioActionPerformed
        // TODO add your handling code here:

        btn_agregar_usuario.setVisible(true);
        btn_agregar_usuario.setEnabled(true);
        btn_cancelar_usuario.setVisible(false);
        btn_eliminar_usuario.setVisible(false);
        btn_modificar_usuario.setVisible(false);
        btn_cancelar_usuario.setEnabled(false);
        btn_eliminar_usuario.setEnabled(false);
        btn_modificar_usuario.setEnabled(false);
        txtF_NombreU.setText(null);
        txtF_ApellidoU.setText(null);
        txtF_Correo.setText(null);
        txtF_Contrase√±aU.setText(null);
        combo_sucursales.setSelectedIndex(0);
        radioBtn_puesto_U.setSelected(true);
        tabla_usuarios.clearSelection();

    }//GEN-LAST:event_btn_cancelar_usuarioActionPerformed

    private void btn_CancelarVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CancelarVActionPerformed
        // TODO add your handling code here:
        ((CustomTableModel) tabla_ventas.getModel()).clearTable();
        txtF_total.setText("0");
        txtF_recibo.setText("0");
        txtF_cambio.setText("0");
        btn_CancelarV.setEnabled(false);
        btn_pago.setEnabled(false);
    }//GEN-LAST:event_btn_CancelarVActionPerformed

    private void tabla_usuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_usuariosMouseClicked
        CustomTableModel model = (CustomTableModel) tabla_usuarios.getModel();
        int row = tabla_usuarios.getSelectedRow();
        int rows = tabla_usuarios.getSelectedRowCount();
        if (rows > 0 && radioBtn_activoU.isSelected()) {
            //SELECT nombre,apellido,activo,puesto,contrasenia,correo,direccion
            btn_agregar_usuario.setVisible(false);
            btn_agregar_usuario.setEnabled(false);
            btn_cancelar_usuario.setVisible(true);
            btn_eliminar_usuario.setVisible(true);
            btn_modificar_usuario.setVisible(true);
            btn_cancelar_usuario.setEnabled(true);
            btn_eliminar_usuario.setEnabled(true);
            btn_modificar_usuario.setEnabled(false);
            txtF_NombreU.setText(null);
            txtF_ApellidoU.setText(null);
            txtF_Correo.setText(null);
            txtF_Contrase√±aU.setText(null);
            combo_sucursales.setSelectedIndex(0);
            radioBtn_puesto_U.setSelected(true);
            if (evt.getClickCount() > 1 && rows == 1) {

                btn_modificar_usuario.setEnabled(true);
                if (model.getValueAt(row, 2).equals("Gerente")) {
                    radioBtn_puesto_U.setSelected(true);
                } else {
                    radioBtn_puesto_U2.setSelected(true);
                }
                txtF_NombreU.setText((String) model.getValueAt(row, 0));
                txtF_ApellidoU.setText((String) model.getValueAt(row, 1));
                txtF_Correo.setText((String) model.getValueAt(row, 4));
                txtF_Contrase√±aU.setText((String) model.getValueAt(row, 3));
                combo_sucursales.setSelectedItem(model.getValueAt(row, 5));
            }

        }
    }//GEN-LAST:event_tabla_usuariosMouseClicked

    private void btn_eliminar_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminar_usuarioActionPerformed
        try {
            CustomTableModel model = (CustomTableModel) tabla_usuarios.getModel();
            Connection con = Conexion.getConexion();
            for (int i = 0; i < tabla_usuarios.getSelectedRowCount(); i++) {
                Conexion.executeUpdate(con, "Update  staff set activo = ? where correo = ?", new Object[]{false, model.getValueAt((int) tabla_usuarios.getSelectedRows()[i], 4)});
            }
            btn_agregar_usuario.setVisible(true);
            btn_agregar_usuario.setEnabled(true);
            btn_cancelar_usuario.setVisible(false);
            btn_eliminar_usuario.setVisible(false);
            btn_modificar_usuario.setVisible(false);
            btn_cancelar_usuario.setEnabled(false);
            btn_eliminar_usuario.setEnabled(false);
            btn_modificar_usuario.setEnabled(false);
            tabla_usuarios.clearSelection();
            Conexion.refreshTable(tabla_usuarios, con);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_eliminar_usuarioActionPerformed

    private void btn_cerrarSesion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrarSesion1ActionPerformed
        cambiarVentana(new Login());
    }//GEN-LAST:event_btn_cerrarSesion1ActionPerformed

    private void btn_agregar_categoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_categoriaActionPerformed
        // TODO add your handling code here:
        try {
            String select;
            Connection con = Conexion.getConexion();
            //aqui te falt un campo que agregamos de ultimo moemnto 
            String insert = "INSERT INTO categoria VALUES(?,?,?)";
            Object[] o = {Conexion.getAutonumericField(con, insert, 1), txt_NombreC.getText(), true};
            Conexion.executeUpdate(con, insert, o);
            Conexion.refreshTable(tabla_Categoria, con);
            con.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btn_agregar_categoriaActionPerformed

    private void btn_cerrarSesionSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrarSesionSActionPerformed
        cambiarVentana(new Login());
    }//GEN-LAST:event_btn_cerrarSesionSActionPerformed

    private void btn_AgregarSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AgregarSActionPerformed
        // TODO add your handling code here:

        try {
            String select;
            Connection con = Conexion.getConexion();

            String insert = "INSERT INTO direccion VALUES(?,?,?,?,?,?)";
            Object[] o = {Conexion.getAutonumericField(con, insert, 1), txt_DireccionS.getText(), "", txt_ColoniaS.getText(), txt_CPS.getText(), txt_TelefonoS.getText()};
            Conexion.executeUpdate(con, insert, o);

            select = "Select direccion_id from direccion where direccion = ? ";
            ResultSet r = Conexion.consultValues(con, select, new Object[]{txt_DireccionS.getText()});
            r.last();
            insert = "INSERT INTO sucursal VALUES(?,?,?)";
            Object[] m = {Conexion.getAutonumericField(con, insert, 1), r.getInt(1), true};
            Conexion.executeUpdate(con, insert, m);
            Conexion.refreshTable(tabla_agregarS, con);
            con.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btn_AgregarSActionPerformed
    private void btn_cancelar_productosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelar_productosActionPerformed
        // TODO add your handling code here:
        btn_Agregar.setVisible(true);
        btn_Agregar.setEnabled(true);
        JComponent[] components = {btn_cancelar_productos, btn_eliminar_productos, btn_modificar_productos};
        for (JComponent c : components) {
            c.setVisible(false);
            c.setEnabled(false);
        }
        txtF_Nombre.setText(null);
        txtF_Precio.setText(null);
        combo_sucursales.setSelectedIndex(0);
        jSpinner2.setValue(0);
        tabla_agregarP.clearSelection();
    }//GEN-LAST:event_btn_cancelar_productosActionPerformed

    private void btn_eliminar_productosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminar_productosActionPerformed
        try {
            CustomTableModel model = (CustomTableModel) tabla_agregarP.getModel();
            Connection con = Conexion.getConexion();
            for (int i = 0; i < tabla_agregarP.getSelectedRowCount(); i++) {
                Conexion.executeUpdate(con, "Update  articulo natural join inventario set activo = ? where nombre_articulo = ? and sucursal_id = ?", new Object[]{false, model.getValueAt((int) tabla_agregarP.getSelectedRows()[i], 0), Login.idSucursal});
            }
            txtF_Nombre.setText(null);
            txtF_Precio.setText(null);
            combo_sucursales.setSelectedIndex(0);
            jSpinner2.setValue(0);
            tabla_agregarP.clearSelection();
            Conexion.refreshTable(tabla_agregarP, con);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_eliminar_productosActionPerformed

    private void btn_modificar_productosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificar_productosActionPerformed
        // TODO add your handling code here:
        try {
            Connection con = Conexion.getConexion();
            ResultSet r = Conexion.consultValues(con, "Select categoria_id from categoria where nombre = ?", new Object[]{combo_categorias.getSelectedItem()});
            if (r.last()) {
                Conexion.executeUpdate(con, "Update articulo natural join inventario set nombre_articulo = ?,precio =?,categoria_id=?,cantidad_disponible = ?,activo=? where nombre_articulo = ? and sucursal_id = ?",
                        new Object[]{txtF_Nombre.getText(), txtF_Precio.getText(), r.getInt(1), jSpinner2.getValue(), true, ((CustomTableModel) tabla_agregarP.getModel()).getValueAt(tabla_agregarP.getSelectedRow(), 0), Login.idSucursal});
            }

            Conexion.refreshTable(tabla_agregarP, con);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn_Agregar.setVisible(true);
        btn_Agregar.setEnabled(true);
        JComponent[] components = {btn_cancelar_productos, btn_eliminar_productos, btn_modificar_productos};
        for (JComponent c : components) {
            c.setVisible(false);
            c.setEnabled(false);
        }
        txtF_Nombre.setText(null);
        txtF_Precio.setText(null);
        combo_sucursales.setSelectedIndex(0);
        jSpinner2.setValue(0);
        tabla_agregarP.clearSelection();

    }//GEN-LAST:event_btn_modificar_productosActionPerformed

    private void btn_help_usuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_help_usuariosActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "En esta pesta√±a puedes agregar,modificar y eliminar empleados: \n"
                + "-para agregar un usuario llena los campos y da clic en 'agregar' \n"
                + "-para eliminar uno o mas usuarios seleccionalos en la tabla y da clic en 'eliminar'\n"
                + "-para modificar un usuario da 'doble clic' sobre un usuario y presiona 'modificar'\n"
                + "-en la seccionde usuarios inactivos se pueden ver los empleados eliminados\n"
                + " con opcion reactivarlos solo dar clic en los usuarios a reactivar y reactivarlos ", "Ayuda: ", JOptionPane.QUESTION_MESSAGE);
    }//GEN-LAST:event_btn_help_usuariosActionPerformed

    private void radioBtn_activoUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_activoUActionPerformed
        JComponent[] components = {btn_agregar_usuario, txtF_NombreU, txtF_ApellidoU, txtF_Correo,
            txtF_Contrase√±aU, combo_sucursales, radioBtn_puesto_U, radioBtn_puesto_U2,
            label_apellido, label_nombre_usuarios, label_contrasenia, correo, label_sucursal, label_puesto};
        for (JComponent c : components) {
            c.setEnabled(true);
            c.setVisible(true);
        }
        btn_reactivar_U.setVisible(false);
        btn_reactivar_U.setEnabled(false);
        txtF_NombreU.setText(null);
        txtF_ApellidoU.setText(null);
        txtF_Correo.setText(null);
        txtF_Contrase√±aU.setText(null);
        combo_sucursales.setSelectedIndex(0);
        radioBtn_puesto_U.setSelected(true);
        tabla_usuarios.clearSelection();
        String SQL = "SELECT nombre,apellido,puesto,contrasenia,correo,direccion as sucursal from staff  natural join sucursal natural join direccion where activo = ?";
        try {
            Connection con = Conexion.getConexion();
            tabla_usuarios.setModel(Conexion.createTableModel(con, SQL, new Object[]{true}, "agregue un usuario"));
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioBtn_activoUActionPerformed

    private void radioBtn_inactivoUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_inactivoUActionPerformed
        JComponent[] components = {btn_agregar_usuario, btn_eliminar_usuario,
            btn_modificar_usuario, btn_cancelar_usuario, txtF_NombreU, txtF_ApellidoU, txtF_Correo,
            txtF_Contrase√±aU, combo_sucursales, radioBtn_puesto_U, radioBtn_puesto_U2,
            label_apellido, label_nombre_usuarios, label_contrasenia, correo, label_sucursal, label_puesto};
        for (JComponent c : components) {
            c.setEnabled(false);
            c.setVisible(false);
        }
        btn_reactivar_U.setVisible(true);
        btn_reactivar_U.setEnabled(true);
        txtF_NombreU.setText(null);
        txtF_ApellidoU.setText(null);
        txtF_Correo.setText(null);
        txtF_Contrase√±aU.setText(null);
        combo_sucursales.setSelectedIndex(0);
        radioBtn_puesto_U.setSelected(true);
        tabla_usuarios.clearSelection();
        String SQL = "SELECT nombre,apellido,puesto,contrasenia,correo,direccion as sucursal from staff  natural join sucursal natural join direccion where activo = ?";
        try {
            try (Connection con = Conexion.getConexion()) {
                tabla_usuarios.setModel(Conexion.createTableModel(con, SQL, new Object[]{false}, "elimine un usuario"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioBtn_inactivoUActionPerformed

    private void btn_reactivar_UActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reactivar_UActionPerformed
        if (tabla_usuarios.getSelectedRowCount() > 0) {
            try {
                CustomTableModel model = (CustomTableModel) tabla_usuarios.getModel();
                Connection con = Conexion.getConexion();
                for (int i = 0; i < tabla_usuarios.getSelectedRowCount(); i++) {
                    Conexion.executeUpdate(con, "Update  staff set activo = ? where correo = ?", new Object[]{true, model.getValueAt((int) tabla_usuarios.getSelectedRows()[i], 4)});
                }
                tabla_usuarios.clearSelection();
                Conexion.refreshTable(tabla_usuarios, con);
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_reactivar_UActionPerformed

    private void tabla_agregarPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_agregarPMouseClicked
        CustomTableModel model = (CustomTableModel) tabla_agregarP.getModel();
        int row = tabla_agregarP.getSelectedRow();
        int rows = tabla_agregarP.getSelectedRowCount();
        if (rows > 0 && radioBtn_activoP.isSelected()) {
            //SELECT nombre,apellido,activo,puesto,contrasenia,correo,direccion
            JComponent[] components = {btn_Agregar, btn_modificar_productos};
            for (JComponent c : components) {
                c.setVisible(false);
                c.setEnabled(false);
            }
            btn_modificar_productos.setVisible(true);
            components = new JComponent[]{btn_cancelar_productos, btn_eliminar_productos};
            for (JComponent c : components) {
                c.setVisible(true);
                c.setEnabled(true);
            }
            txtF_Nombre.setText(null);
            txtF_Precio.setText(null);
            combo_categorias.setSelectedIndex(0);
            jSpinner2.setValue(0);
            if (evt.getClickCount() > 1 && rows == 1) {
                btn_modificar_productos.setEnabled(true);
                txtF_Nombre.setText((String) model.getValueAt(row, 0));
                txtF_Precio.setText("" + model.getValueAt(row, 1));
                combo_categorias.setSelectedItem(model.getValueAt(row, 2));
                jSpinner2.setValue(model.getValueAt(row, 3));
            }

        }
    }//GEN-LAST:event_tabla_agregarPMouseClicked

    private void radioBtn_activoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_activoPActionPerformed
        JComponent[] components = {btn_Agregar, txtF_Nombre,
            txtF_Precio, combo_categorias, jSpinner2,
            label_nombre, label_precio, label_cantidadP, label_categoria};
        for (JComponent c : components) {
            c.setEnabled(true);
            c.setVisible(true);
        }
        btn_restaurarP.setVisible(false);
        btn_restaurarP.setEnabled(false);
        components = new JComponent[]{btn_cancelar_productos, btn_eliminar_productos, btn_modificar_productos};
        for (JComponent c : components) {
            c.setVisible(false);
            c.setEnabled(false);
        }
        txtF_Nombre.setText(null);
        txtF_Precio.setText(null);
        combo_sucursales.setSelectedIndex(0);
        jSpinner2.setValue(0);
        tabla_agregarP.clearSelection();
        String SQL = "SELECT nombre_articulo as articulo ,precio,nombre as categoria, cantidad_disponible as dsp FROM articulo natural join categoria natural join inventario natural join sucursal where sucursal_id = ? and activo = ?";
        try {
            Connection con = Conexion.getConexion();
            tabla_agregarP.setModel(Conexion.createTableModel(con, SQL, new Object[]{Login.idSucursal, true}, "agregue un producto"));
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }// TODO add your handling code here:
    }//GEN-LAST:event_radioBtn_activoPActionPerformed

    private void radioBtn_inactivoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_inactivoPActionPerformed
        JComponent[] components = {btn_Agregar, txtF_Nombre,
            txtF_Precio, combo_categorias, jSpinner2,
            label_nombre, label_precio, label_cantidadP, label_categoria};
        for (JComponent c : components) {
            c.setEnabled(false);
            c.setVisible(false);
        }
        btn_restaurarP.setVisible(true);
        btn_restaurarP.setEnabled(true);
        components = new JComponent[]{btn_cancelar_productos, btn_eliminar_productos, btn_modificar_productos, btn_Agregar};
        for (JComponent c : components) {
            c.setVisible(false);
            c.setEnabled(false);
        }
        txtF_Nombre.setText(null);
        txtF_Precio.setText(null);
        combo_sucursales.setSelectedIndex(0);
        jSpinner2.setValue(0);
        tabla_agregarP.clearSelection();
        String SQL = "SELECT nombre_articulo as articulo ,precio,nombre as categoria, cantidad_disponible as dsp FROM articulo natural join categoria natural join inventario natural join sucursal where sucursal_id = ? and activo = ?";
        try {
            Connection con = Conexion.getConexion();
            tabla_agregarP.setModel(Conexion.createTableModel(con, SQL, new Object[]{Login.idSucursal, false}, "elimine un producto"));
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }// TODO add your handling code here:
    }//GEN-LAST:event_radioBtn_inactivoPActionPerformed

    private void btn_restaurarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_restaurarPActionPerformed
        try {
            CustomTableModel model = (CustomTableModel) tabla_agregarP.getModel();
            Connection con = Conexion.getConexion();
            for (int i = 0; i < tabla_agregarP.getSelectedRowCount(); i++) {
                Conexion.executeUpdate(con, "Update  articulo natural join inventario set activo = ? where nombre_articulo = ? and sucursal_id = ?", new Object[]{true, model.getValueAt((int) tabla_agregarP.getSelectedRows()[i], 0), Login.idSucursal});
            }
            tabla_agregarP.clearSelection();
            Conexion.refreshTable(tabla_agregarP, con);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_restaurarPActionPerformed

    private void btn_cancelarSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarSActionPerformed
        // TODO add your handling code here:
        btn_AgregarS.setVisible(true);
        btn_AgregarS.setEnabled(true);
        JComponent[] components = {btn_cancelarS, btn_eliminarS, btn_modificarS};
        for (JComponent c : components) {
            c.setVisible(false);
            c.setEnabled(false);
        }
        txt_DireccionS.setText(null);
        txt_ColoniaS.setText(null);
        txt_CPS.setText(null);
        txt_TelefonoS.setText(null);
        tabla_agregarS.clearSelection();
    }//GEN-LAST:event_btn_cancelarSActionPerformed

    private void btn_modificarSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarSActionPerformed
        // TODO add your handling code here:
        try {
            Connection con = Conexion.getConexion();
            Conexion.executeUpdate(con, "Update direccion natural join sucursal  set direccion = ?,colonia =?,cp=?,telefono = ?,activa=? where direccion = ? ",
                    new Object[]{txt_DireccionS.getText(), txt_ColoniaS.getText(), txt_CPS.getText(), txt_TelefonoS.getText(), true, ((CustomTableModel) tabla_agregarS.getModel()).getValueAt(tabla_agregarS.getSelectedRow(), 0)});

            Conexion.refreshTable(tabla_agregarS, con);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn_AgregarS.setVisible(true);
        btn_AgregarS.setEnabled(true);
        JComponent[] components = {btn_cancelarS, btn_eliminarS, btn_modificarS};
        for (JComponent c : components) {
            c.setVisible(false);
            c.setEnabled(false);
        }
        txt_DireccionS.setText(null);
        txt_ColoniaS.setText(null);
        txt_CPS.setText(null);
        txt_TelefonoS.setText(null);
        tabla_agregarS.clearSelection();
    }//GEN-LAST:event_btn_modificarSActionPerformed

    private void btn_eliminarSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarSActionPerformed
        try {
            CustomTableModel model = (CustomTableModel) tabla_agregarS.getModel();
            Connection con = Conexion.getConexion();
            for (int i = 0; i < tabla_agregarS.getSelectedRowCount(); i++) {
                Conexion.executeUpdate(con, "Update  direccion natural join sucursal set activa = ? where direccion = ? ", new Object[]{false, model.getValueAt((int) tabla_agregarS.getSelectedRows()[i], 0)});
            }
            txt_DireccionS.setText(null);
            txt_ColoniaS.setText(null);
            txt_CPS.setText(null);
            txt_TelefonoS.setText(null);
            tabla_agregarS.clearSelection();
            Conexion.refreshTable(tabla_agregarS, con);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_eliminarSActionPerformed

    private void btn_restaurarSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_restaurarSActionPerformed
        // TODO add your handling code here:
        try {
            CustomTableModel model = (CustomTableModel) tabla_agregarS.getModel();
            Connection con = Conexion.getConexion();
            for (int i = 0; i < tabla_agregarS.getSelectedRowCount(); i++) {
                Conexion.executeUpdate(con, "Update  direccion natural join sucursal set activa = ? where direccion = ? ", new Object[]{true, model.getValueAt((int) tabla_agregarS.getSelectedRows()[i], 0)});
            }
            tabla_agregarS.clearSelection();
            Conexion.refreshTable(tabla_agregarS, con);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_restaurarSActionPerformed

    private void radioBtn_activoSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_activoSActionPerformed
        JComponent[] components = {btn_AgregarS, txt_DireccionS,
            txt_ColoniaS, txt_CPS, txt_TelefonoS,
            label_direccionS, label_CPS, label_coloniaS, label_telefonoS};
        for (JComponent c : components) {
            c.setEnabled(true);
            c.setVisible(true);
        }
        btn_restaurarS.setVisible(false);
        btn_restaurarS.setEnabled(false);
        components = new JComponent[]{btn_cancelarS, btn_eliminarS, btn_modificarS};
        for (JComponent c : components) {
            c.setVisible(false);
            c.setEnabled(false);
        }
        txt_DireccionS.setText(null);
        txt_ColoniaS.setText(null);
        txt_CPS.setText(null);
        txt_TelefonoS.setText(null);
        tabla_agregarS.clearSelection();
        try {
            Connection con = Conexion.getConexion();
            String SQL = "select direccion,colonia,cp,telefono from direccion natural join sucursal where activa = ?  ";
            tabla_agregarS.setModel(Conexion.createTableModel(con, SQL, new Object[]{true}, "agregue una sucursal"));
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioBtn_activoSActionPerformed

    private void radioBtn_inactivoSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_inactivoSActionPerformed
        // TODO add your handling code here:
        JComponent[] components = {btn_AgregarS, txt_DireccionS,
            txt_ColoniaS, txt_CPS, txt_TelefonoS,
            label_direccionS, label_CPS, label_coloniaS, label_telefonoS};
        for (JComponent c : components) {
            c.setEnabled(false);
            c.setVisible(false);
        }
        btn_restaurarS.setVisible(true);
        btn_restaurarS.setEnabled(true);
        components = new JComponent[]{btn_cancelarS, btn_eliminarS, btn_modificarS};
        for (JComponent c : components) {
            c.setVisible(false);
            c.setEnabled(false);
        }
        txt_DireccionS.setText(null);
        txt_ColoniaS.setText(null);
        txt_CPS.setText(null);
        txt_TelefonoS.setText(null);
        tabla_agregarS.clearSelection();
        try {
            Connection con = Conexion.getConexion();
            String SQL = "select direccion,colonia,cp,telefono from direccion natural join sucursal where activa = ?  ";
            tabla_agregarS.setModel(Conexion.createTableModel(con, SQL, new Object[]{false}, "elimine una sucursal"));
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioBtn_inactivoSActionPerformed

    private void tabla_agregarSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_agregarSMouseClicked
        // TODO add your handling code here:
        CustomTableModel model = (CustomTableModel) tabla_agregarS.getModel();
        int row = tabla_agregarS.getSelectedRow();
        int rows = tabla_agregarS.getSelectedRowCount();
        if (rows > 0 && radioBtn_activoS.isSelected()) {
            //SELECT nombre,apellido,activo,puesto,contrasenia,correo,direccion
            JComponent[] components = {btn_AgregarS, btn_modificarS};
            for (JComponent c : components) {
                c.setVisible(false);
                c.setEnabled(false);
            }
            btn_modificarS.setVisible(true);
            components = new JComponent[]{btn_cancelarS, btn_eliminarS};
            for (JComponent c : components) {
                c.setVisible(true);
                c.setEnabled(true);
            }

            txt_DireccionS.setText(null);
            txt_ColoniaS.setText(null);
            txt_CPS.setText(null);
            txt_TelefonoS.setText(null);
            if (evt.getClickCount() > 1 && rows == 1) {
                btn_modificarS.setEnabled(true);
                txt_DireccionS.setText("" + model.getValueAt(row, 0));
                txt_ColoniaS.setText("" + model.getValueAt(row, 1));
                txt_CPS.setText("" + model.getValueAt(row, 2));
                txt_TelefonoS.setText("" + model.getValueAt(row, 3));
            }

        }
    }//GEN-LAST:event_tabla_agregarSMouseClicked

    private void btn_cerrarSesion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrarSesion3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_cerrarSesion3ActionPerformed

    private void btn_BuscarHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BuscarHistorialActionPerformed
        try {

            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String fechainicio = dateFormat.format(spinnerFechadeIncio.getValue());
            String fechafinal = dateFormat.format(spinnerFechaFinal.getValue());
            ResultSet r;
            Connection con = Conexion.getConexion();
            if (radioBtn_detallesNo.isSelected()) {
                r = Conexion.callStoredProcedure(con, "call getComprasEnFechaSinDetalle(?,?)", new Object[]{fechainicio, fechafinal});
            } else {
                r = Conexion.callStoredProcedure(con, "call getComprasEnFecha(?,?)", new Object[]{fechainicio, fechafinal});
            }
            tabla_historial.setModel(Conexion.createTableModel(con, r, "no hay compras"));
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_BuscarHistorialActionPerformed

    private void tabla_CategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_CategoriaMouseClicked
        // TODO add your handling code here:
        CustomTableModel model = (CustomTableModel) tabla_Categoria.getModel();
        int row = tabla_Categoria.getSelectedRow();
        int rows = tabla_Categoria.getSelectedRowCount();

        if (rows > 0 && radioBtn_activoC.isSelected()) {
            //SELECT nombre,apellido,activo,puesto,contrasenia,correo,direccion
            btn_agregar_categoria.setVisible(false);
            btn_agregar_categoria.setEnabled(false);
            btn_cancelar_categoria.setVisible(true);
            btn_eliminar_categoria.setVisible(true);
            btn_modificar_categoria.setVisible(true);
            btn_cancelar_categoria.setEnabled(true);
            btn_eliminar_categoria.setEnabled(true);
            btn_modificar_categoria.setEnabled(false);
            txt_NombreC.setText(null);
            if (evt.getClickCount() > 1 && rows == 1) {

                btn_modificar_categoria.setEnabled(true);
                txt_NombreC.setText((String) model.getValueAt(row, 0));
            }
        }
    }//GEN-LAST:event_tabla_CategoriaMouseClicked


    private void btn_cancelar_categoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelar_categoriaActionPerformed
        // TODO add your handling code here:
        btn_agregar_categoria.setVisible(true);
        btn_agregar_categoria.setEnabled(true);
        btn_cancelar_categoria.setVisible(false);
        btn_eliminar_categoria.setVisible(false);
        btn_modificar_categoria.setVisible(false);
        btn_cancelar_categoria.setEnabled(false);
        btn_eliminar_categoria.setEnabled(false);
        btn_modificar_categoria.setEnabled(false);
        txt_NombreC.setText(null);
        tabla_Categoria.clearSelection();
    }//GEN-LAST:event_btn_cancelar_categoriaActionPerformed

    private void btn_modificar_categoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificar_categoriaActionPerformed
        // TODO add your handling code here:
        try {
            Connection con = Conexion.getConexion();
            // TODO add your handling code here:

            //ResultSet r = Conexion.consultValues(con, "Select categoria_id from categoria where nombre = ?", new Object[]{combo_sucursales.getSelectedItem()});
            //if (r.last()) {
            Conexion.executeUpdate(con, "Update categoria set nombre =? where nombre = ?", //aqui esta el error uri la columna donde esta el nombre es la 0 no la 4
                    new Object[]{txt_NombreC.getText(), ((CustomTableModel) tabla_Categoria.getModel()).getValueAt(tabla_Categoria.getSelectedRow(), 0)});
            //}

            Conexion.refreshTable(tabla_Categoria, con);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn_agregar_categoria.setVisible(true);
        btn_agregar_categoria.setEnabled(true);
        btn_cancelar_categoria.setVisible(false);
        btn_eliminar_categoria.setVisible(false);
        btn_modificar_categoria.setVisible(false);
        btn_cancelar_categoria.setEnabled(false);
        btn_eliminar_categoria.setEnabled(false);
        btn_modificar_categoria.setEnabled(false);
        txt_NombreC.setText(null);
        tabla_Categoria.clearSelection();
    }//GEN-LAST:event_btn_modificar_categoriaActionPerformed

    private void btn_eliminar_categoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminar_categoriaActionPerformed
        // TODO add your handling code here:
        try {
            CustomTableModel model = (CustomTableModel) tabla_Categoria.getModel();
            Connection con = Conexion.getConexion();
            for (int i = 0; i < tabla_Categoria.getSelectedRowCount(); i++) {
                Conexion.executeUpdate(con, "Update  categoria set activa= ? where nombre= ?", new Object[]{false, model.getValueAt(tabla_Categoria.getSelectedRows()[i], 0)});
            }
            btn_agregar_categoria.setVisible(true);
            btn_agregar_categoria.setEnabled(true);
            btn_cancelar_categoria.setVisible(false);
            btn_eliminar_categoria.setVisible(false);
            btn_modificar_categoria.setVisible(false);
            btn_cancelar_categoria.setEnabled(false);
            btn_eliminar_categoria.setEnabled(false);
            btn_modificar_categoria.setEnabled(false);
            tabla_Categoria.clearSelection();
            Conexion.refreshTable(tabla_Categoria, con);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_eliminar_categoriaActionPerformed

    private void radioBtn_activoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_activoCActionPerformed
        JComponent[] components = {btn_agregar_categoria, txt_NombreC, label_nombre1};
        for (JComponent c : components) {
            c.setEnabled(true);
            c.setVisible(true);
        }
        btn_restaurarC.setVisible(false);
        btn_restaurarC.setEnabled(false);
        components = new JComponent[]{btn_cancelar_categoria, btn_eliminar_categoria, btn_modificar_categoria};
        for (JComponent c : components) {
            c.setVisible(false);
            c.setEnabled(false);
        }
        txt_NombreC.setText(null);
        tabla_agregarS.clearSelection();
        try {
            Connection con = Conexion.getConexion();
            String SQL = "SELECT nombre from categoria where activa = ?";
            tabla_Categoria.setModel(Conexion.createTableModel(con, SQL, new Object[]{true}, "agregue una categoria"));

            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioBtn_activoCActionPerformed

    private void radioBtn_inactivoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_inactivoCActionPerformed
        JComponent[] components = {btn_agregar_categoria, txt_NombreC, label_nombre1};
        for (JComponent c : components) {
            c.setEnabled(false);
            c.setVisible(false);
        }
        btn_restaurarC.setVisible(true);
        btn_restaurarC.setEnabled(true);
        components = new JComponent[]{btn_cancelar_categoria, btn_eliminar_categoria, btn_modificar_categoria};
        for (JComponent c : components) {
            c.setVisible(false);
            c.setEnabled(false);
        }
        txt_NombreC.setText(null);
        tabla_agregarS.clearSelection();
        try {
            Connection con = Conexion.getConexion();
            String SQL = "SELECT nombre from categoria where activa = ?";
            tabla_Categoria.setModel(Conexion.createTableModel(con, SQL, new Object[]{false}, "agregue una categoria"));

            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioBtn_inactivoCActionPerformed

    private void btn_restaurarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_restaurarCActionPerformed
        try {
            CustomTableModel model = (CustomTableModel) tabla_Categoria.getModel();
            Connection con = Conexion.getConexion();
            for (int i = 0; i < tabla_Categoria.getSelectedRowCount(); i++) {
                Conexion.executeUpdate(con, "Update  categoria set activa= ? where nombre= ?", new Object[]{true, model.getValueAt(tabla_Categoria.getSelectedRows()[i], 0)});
            }
            btn_agregar_categoria.setVisible(true);
            btn_agregar_categoria.setEnabled(true);
            btn_cancelar_categoria.setVisible(false);
            btn_eliminar_categoria.setVisible(false);
            btn_modificar_categoria.setVisible(false);
            btn_cancelar_categoria.setEnabled(false);
            btn_eliminar_categoria.setEnabled(false);
            btn_modificar_categoria.setEnabled(false);
            tabla_Categoria.clearSelection();
            Conexion.refreshTable(tabla_Categoria, con);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_restaurarCActionPerformed

    private void radioBtn_detallesSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_detallesSiActionPerformed
        try {

            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String fechainicio = dateFormat.format(spinnerFechadeIncio.getValue());
            String fechafinal = dateFormat.format(spinnerFechaFinal.getValue());
            ResultSet r;
            Connection con = Conexion.getConexion();
            r = Conexion.callStoredProcedure(con, "call getComprasEnFecha(?,?)", new Object[]{fechainicio, fechafinal});
            tabla_historial.setModel(Conexion.createTableModel(con, r, "no hay compras"));
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioBtn_detallesSiActionPerformed

    private void radioBtn_detallesNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_detallesNoActionPerformed
        try {

            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String fechainicio = dateFormat.format(spinnerFechadeIncio.getValue());
            String fechafinal = dateFormat.format(spinnerFechaFinal.getValue());
            System.out.println(fechainicio);
            System.out.println(fechafinal);
            ResultSet r;
            Connection con = Conexion.getConexion();
            r = Conexion.callStoredProcedure(con, "call getComprasEnFechaSinDetalle(?,?)", new Object[]{fechainicio, fechafinal});
            tabla_historial.setModel(Conexion.createTableModel(con, r, "no hay compras"));
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioBtn_detallesNoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Agregar_jTab;
    private javax.swing.JScrollPane Categoria_Jtab;
    private javax.swing.JScrollPane Pagos_Jtab;
    private javax.swing.JScrollPane ScrollP_Ventas;
    private javax.swing.JScrollPane ScrollP_busquedas;
    private javax.swing.JScrollPane Sucursal_jTab;
    private javax.swing.JScrollPane Usuarios_JTab;
    private javax.swing.JScrollPane Venta_JTab;
    private javax.swing.JButton background_venta;
    private javax.swing.JButton bckground_usuarios;
    private javax.swing.JButton boton_cerrarSesion_usuarios;
    private javax.swing.ButtonGroup btnGroup_PuestoU;
    private javax.swing.ButtonGroup btnGroup_activoC;
    private javax.swing.ButtonGroup btnGroup_activoP;
    private javax.swing.ButtonGroup btnGroup_activoS;
    private javax.swing.ButtonGroup btnGroup_activoU;
    private javax.swing.ButtonGroup btnGroup_detallesPagos;
    private javax.swing.JButton btn_Agregar;
    private javax.swing.JButton btn_AgregarS;
    private javax.swing.JButton btn_BuscarHistorial;
    private javax.swing.JButton btn_CancelarV;
    private javax.swing.JButton btn_agregar_categoria;
    private javax.swing.JButton btn_agregar_usuario;
    private javax.swing.JButton btn_agregar_venta;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_cancelarS;
    private javax.swing.JButton btn_cancelar_categoria;
    private javax.swing.JButton btn_cancelar_productos;
    private javax.swing.JButton btn_cancelar_usuario;
    private javax.swing.JButton btn_cerrarSesion;
    private javax.swing.JButton btn_cerrarSesion1;
    private javax.swing.JButton btn_cerrarSesion3;
    private javax.swing.JButton btn_cerrarSesionS;
    private javax.swing.JButton btn_eliminarS;
    private javax.swing.JButton btn_eliminar_categoria;
    private javax.swing.JButton btn_eliminar_productos;
    private javax.swing.JButton btn_eliminar_usuario;
    private javax.swing.JButton btn_help_usuarios;
    private javax.swing.JButton btn_modificarS;
    private javax.swing.JButton btn_modificar_categoria;
    private javax.swing.JButton btn_modificar_productos;
    private javax.swing.JButton btn_modificar_usuario;
    private javax.swing.JButton btn_pago;
    private javax.swing.JButton btn_reactivar_U;
    private javax.swing.JButton btn_restaurarC;
    private javax.swing.JButton btn_restaurarP;
    private javax.swing.JButton btn_restaurarS;
    private javax.swing.JButton cerrarSesion_venta;
    private javax.swing.JComboBox combo_categorias;
    private javax.swing.JComboBox combo_categorias_ventas;
    private javax.swing.JComboBox combo_sucursales;
    private javax.swing.JLabel correo;
    private javax.swing.JButton fondo_agregar;
    private javax.swing.JButton fondo_agregar1;
    private javax.swing.JButton fondo_agregar3;
    private javax.swing.JButton fondo_agregarS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel label_CPS;
    private javax.swing.JLabel label_apellido;
    private javax.swing.JLabel label_busquedas;
    private javax.swing.JLabel label_cambio;
    private javax.swing.JLabel label_cantidadP;
    private javax.swing.JLabel label_cantidadP1;
    private javax.swing.JLabel label_categoria;
    private javax.swing.JLabel label_categoria_ventas;
    private javax.swing.JLabel label_categoriasC;
    private javax.swing.JLabel label_codigoProd;
    private javax.swing.JLabel label_coloniaS;
    private javax.swing.JLabel label_contrasenia;
    private javax.swing.JLabel label_direccionS;
    private javax.swing.JLabel label_estatusU;
    private javax.swing.JLabel label_nombre;
    private javax.swing.JLabel label_nombre1;
    private javax.swing.JLabel label_nombre_usuarios;
    private javax.swing.JLabel label_precio;
    private javax.swing.JLabel label_puesto;
    private javax.swing.JLabel label_recibo;
    private javax.swing.JLabel label_sucursal;
    private javax.swing.JLabel label_sucursalesS;
    private javax.swing.JLabel label_sucursalesS1;
    private javax.swing.JLabel label_telefonoS;
    private javax.swing.JLabel label_titulo;
    private javax.swing.JLabel label_titulo1;
    private javax.swing.JLabel label_titulo3;
    private javax.swing.JLabel label_tituloS;
    private javax.swing.JLabel label_total;
    private javax.swing.JLabel label_ventas;
    private javax.swing.JButton logo;
    private javax.swing.JButton logo1;
    private javax.swing.JButton logo2;
    private javax.swing.JButton logo3;
    private javax.swing.JButton logo4;
    private javax.swing.JButton logo5;
    private javax.swing.JRadioButton radioBtn_activoC;
    private javax.swing.JRadioButton radioBtn_activoP;
    private javax.swing.JRadioButton radioBtn_activoS;
    private javax.swing.JRadioButton radioBtn_activoU;
    private javax.swing.JRadioButton radioBtn_detallesNo;
    private javax.swing.JRadioButton radioBtn_detallesSi;
    private javax.swing.JRadioButton radioBtn_inactivoC;
    private javax.swing.JRadioButton radioBtn_inactivoP;
    private javax.swing.JRadioButton radioBtn_inactivoS;
    private javax.swing.JRadioButton radioBtn_inactivoU;
    private javax.swing.JRadioButton radioBtn_puesto_U;
    private javax.swing.JRadioButton radioBtn_puesto_U2;
    private javax.swing.JScrollPane scrollP_S;
    private javax.swing.JScrollPane scrollP_Usuarios;
    private javax.swing.JScrollPane scrollP_productos;
    private javax.swing.JScrollPane scrollP_productos1;
    private javax.swing.JSpinner spinnerFechaFinal;
    private javax.swing.JSpinner spinnerFechadeIncio;
    private javax.swing.JPanel tabUsuarios;
    private javax.swing.JPanel tab_S;
    private javax.swing.JPanel tab_agregar;
    private javax.swing.JPanel tab_agregar1;
    private javax.swing.JPanel tab_agregar3;
    private javax.swing.JPanel tab_venta;
    private javax.swing.JTable tabla_Categoria;
    private javax.swing.JTable tabla_agregarP;
    private javax.swing.JTable tabla_agregarS;
    private javax.swing.JTable tabla_busquedas;
    private javax.swing.JTable tabla_historial;
    private javax.swing.JTable tabla_usuarios;
    private javax.swing.JTable tabla_ventas;
    private javax.swing.JLabel titulo_usuarios;
    private javax.swing.JLabel titulo_ventas;
    private javax.swing.JTextField txtF_ApellidoU;
    private javax.swing.JTextField txtF_Contrase√±aU;
    private javax.swing.JTextField txtF_Correo;
    private javax.swing.JTextField txtF_Nombre;
    private javax.swing.JTextField txtF_NombreU;
    private javax.swing.JTextField txtF_Precio;
    private javax.swing.JTextField txtF_cambio;
    private javax.swing.JTextField txtF_codproducto;
    private javax.swing.JTextField txtF_recibo;
    private javax.swing.JTextField txtF_total;
    private javax.swing.JTextField txt_CPS;
    private javax.swing.JTextField txt_ColoniaS;
    private javax.swing.JTextField txt_DireccionS;
    private javax.swing.JTextField txt_NombreC;
    private javax.swing.JTextField txt_TelefonoS;
    // End of variables declaration//GEN-END:variables

}
